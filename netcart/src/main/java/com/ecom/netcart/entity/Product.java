package com.ecom.netcart.entity; // Package declaration

import java.util.List; // Importing List interface

import jakarta.persistence.Column; // Importing JPA Column annotation
import jakarta.persistence.Entity; // Importing JPA Entity annotation
import jakarta.persistence.FetchType; // Importing JPA FetchType enum
import jakarta.persistence.GeneratedValue; // Importing JPA GeneratedValue annotation
import jakarta.persistence.GenerationType; // Importing JPA GenerationType enum
import jakarta.persistence.Id; // Importing JPA Id annotation
import jakarta.persistence.JoinColumn; // Importing JPA JoinColumn annotation
import jakarta.persistence.ManyToMany; // Importing JPA ManyToMany annotation
import jakarta.persistence.ManyToOne; // Importing JPA ManyToOne annotation
import lombok.Data; // Importing Lombok Data annotation

/**
 * Represents a product in the e-commerce application.
 * Each product belongs to a category and can be part of multiple orders.
 */
@Data // Lombok annotation to generate getters, setters, toString, equals, and hashCode methods
@Entity // Specifies that the class is an entity and is mapped to a database table
public class Product {

    @Id // Specifies the primary key of an entity
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Provides the specification of generation strategies for the values of primary keys
    private Integer pId; // Unique identifier for the product

    private String pName; // Name of the product

    @Column // Specifies that this field is a column in the database table
    private String pDesc; // Description of the product

    private Integer pPrice; // Price of the product

    @JoinColumn(name = "categoryId") // Specifies the foreign key column for the category in the product table
    @ManyToOne // Specifies a many-to-one relationship with the Category entity
    private Category category; // Category to which the product belongs

    @ManyToMany(mappedBy = "product", fetch = FetchType.EAGER) // Specifies a many-to-many relationship with the Orders entity, with eager fetching
    private List<Orders> order; // List of orders that include this product

    // Default constructor, getters, setters, and other methods are generated by Lombok's @Data annotation
}
