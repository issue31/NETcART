package com.ecom.netcart.entity; // Package declaration

import java.time.LocalDate; // Importing LocalDate class for date handling
import java.util.List; // Importing List interface

import jakarta.persistence.Entity; // Importing JPA Entity annotation
import jakarta.persistence.FetchType; // Importing JPA FetchType enum
import jakarta.persistence.GeneratedValue; // Importing JPA GeneratedValue annotation
import jakarta.persistence.GenerationType; // Importing JPA GenerationType enum
import jakarta.persistence.Id; // Importing JPA Id annotation
import jakarta.persistence.JoinColumn; // Importing JPA JoinColumn annotation
import jakarta.persistence.ManyToMany; // Importing JPA ManyToMany annotation
import jakarta.persistence.ManyToOne; // Importing JPA ManyToOne annotation
import lombok.Data; // Importing Lombok Data annotation
import lombok.ToString; // Importing Lombok ToString annotation

/**
 * Represents an order in the e-commerce application.
 * Each order can have multiple products and is associated with a single user.
 */
@Data // Lombok annotation to generate getters, setters, toString, equals, and hashCode methods
@Entity // Specifies that the class is an entity and is mapped to a database table
public class Orders {

    @Id // Specifies the primary key of an entity
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Provides the specification of generation strategies for the values of primary keys
    private Integer orderId; // Unique identifier for the order

    private Integer price; // Total price of the order

    private LocalDate orderDate; // Date when the order was placed

    @ManyToMany(fetch = FetchType.EAGER) // Specifies a many-to-many relationship with the Product entity, with eager fetching
    private List<Product> product; // List of products in this order

    @ManyToOne // Specifies a many-to-one relationship with the User entity
    @ToString.Exclude // Excludes the user details from the generated toString method to avoid sensitive information leakage
    @JoinColumn(name = "userId") // Specifies the foreign key column for the user in the orders table
    private User user; // User who placed the order

    private String status; // Status of the order (e.g., pending, shipped, delivered)

    // Default constructor, getters, setters, and other methods are generated by Lombok's @Data annotation
}
